import proguard.gradle.ProGuardTask

apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 3
        versionName "3.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}

task cleanJars(type: Delete) {
    delete 'build/libs/*.*'
}

task cleanBuildDir(type: Delete) {
    delete rootProject.buildDir
}

def jarPath = 'build/libs/';
def jarName = 'lite-http-' + "3.0" + '.jar';
def jarProName = 'lite-http-pro-' + "3.0" + '.jar';

task makeJar(type: Jar, dependsOn: ['assembleRelease']) {
    archiveName jarName;
    destinationDir = file('build/libs')
    from('build/intermediates/classes/release/')
    exclude('test/', 'BuildConfig.class', 'R.class', 'R\$*.class', 'META-INF/')
}

def androidSDKDir = plugins.getPlugin('com.android.library').sdkHandler.getSdkFolder()
def androidJarDir = androidSDKDir.toString() + '/platforms/' + android.compileSdkVersion + '/android.jar'

task makeProguardJar(type: ProGuardTask, dependsOn: ['makeJar']) {
    libraryjars(androidJarDir)
    configuration 'proguard-rules.pro'
    injars(jarPath + jarName)
    outjars(jarPath + jarProName)
}